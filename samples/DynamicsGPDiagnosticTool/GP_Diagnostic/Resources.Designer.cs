//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Microsoft.GP.MigrationDiagnostic {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Microsoft.GP.MigrationDiagnostic.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap Checkmark_64x {
            get {
                object obj = ResourceManager.GetObject("Checkmark_64x", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap Checkmark_grey_64x {
            get {
                object obj = ResourceManager.GetObject("Checkmark_grey_64x", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap Checkmark_red_64x {
            get {
                object obj = ResourceManager.GetObject("Checkmark_red_64x", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Main Segments with different Account Categories.
        /// </summary>
        internal static string GpAccountCategoryMismatchTaskDescription {
            get {
                return ResourceManager.GetString("GpAccountCategoryMismatchTaskDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} main segment(s) detected to have more than 1 account category. When accounts have the same main segment but different Account Categories, migrated transactions will be consolidated into a single account in Business Central. This could potentially lead to unintended outcomes..
        /// </summary>
        internal static string GpAccountCategoryMismatchTaskSummary {
            get {
                return ResourceManager.GetString("GpAccountCategoryMismatchTaskSummary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Accounts with blank segments.
        /// </summary>
        internal static string GpBlankAccountSegmentsTaskDescription {
            get {
                return ResourceManager.GetString("GpBlankAccountSegmentsTaskDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} account(s) with a blank main segment. The Business Central migration tool does not allow for blank main account segments that have transactions..
        /// </summary>
        internal static string GpBlankAccountSegmentsTaskSummary {
            get {
                return ResourceManager.GetString("GpBlankAccountSegmentsTaskSummary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Checkbook number with leading spaces in the Id.
        /// </summary>
        internal static string GpCheckbookNumberSpacePrefixTaskDescription {
            get {
                return ResourceManager.GetString("GpCheckbookNumberSpacePrefixTaskDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} checkbook(s) contains leading spaces in the Id. Business Central will strip the spaces during the migration, which could result in duplicates. This causes the migration to skip migrating the duplicate bank accounts..
        /// </summary>
        internal static string GpCheckbookNumberSpacePrefixTaskSummary {
            get {
                return ResourceManager.GetString("GpCheckbookNumberSpacePrefixTaskSummary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unsupported company version.
        /// </summary>
        internal static string GpCompanyVersionTaskDescription {
            get {
                return ResourceManager.GetString("GpCompanyVersionTaskDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to GP company version {0} matches the current system version, but doesn&apos;t meet the minimum requirements. The Business Central Migration Tool requires the company and system versions to match, and be GP 14 or later..
        /// </summary>
        internal static string GpCompanyVersionTaskIncompatible {
            get {
                return ResourceManager.GetString("GpCompanyVersionTaskIncompatible", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to GP company version {0} and system version {1} don&apos;t match. The Business Central Migration Tool requires the company and system versions to match, and be GP 14 or later..
        /// </summary>
        internal static string GpCompanyVersionTaskNotMatching {
            get {
                return ResourceManager.GetString("GpCompanyVersionTaskNotMatching", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not determine company or system GP versions. It will need to be manually evaluated. The Business Central Migration Tool requires the company and system versions to match, and be GP 14 or later..
        /// </summary>
        internal static string GpCompanyVersionTaskUndetermined {
            get {
                return ResourceManager.GetString("GpCompanyVersionTaskUndetermined", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Active customer address IDs greater than 10 characters.
        /// </summary>
        internal static string GpCustomerAddressIdLengthTaskDescription {
            get {
                return ResourceManager.GetString("GpCustomerAddressIdLengthTaskDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} address(es) of active customers have IDs greater than 10 characters. Business Central requires address IDs to be 10 or fewer characters. Address IDs greater than 10 characters will be truncated when migrated..
        /// </summary>
        internal static string GpCustomerAddressIdLengthTaskSummary {
            get {
                return ResourceManager.GetString("GpCustomerAddressIdLengthTaskSummary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Active customer email addresses invalidly formatted.
        /// </summary>
        internal static string GpCustomerInvalidEmailTaskDescription {
            get {
                return ResourceManager.GetString("GpCustomerInvalidEmailTaskDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} customer email address(es) invalidly formatted. Business Central requires email addresses be in a specific format, and emails outside this format will not be migrated..
        /// </summary>
        internal static string GpCustomerInvalidEmailTaskSummary {
            get {
                return ResourceManager.GetString("GpCustomerInvalidEmailTaskSummary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Customer classes used and are missing its master record.
        /// </summary>
        internal static string GpCustomerMissingMasterRecordTaskDescription {
            get {
                return ResourceManager.GetString("GpCustomerMissingMasterRecordTaskDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} used customer class(es) found missing master record. The default GP posting group will be used during the migration if the customer class does not have a master record..
        /// </summary>
        internal static string GpCustomerMissingMasterRecordTaskSummary {
            get {
                return ResourceManager.GetString("GpCustomerMissingMasterRecordTaskSummary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Customer name length.
        /// </summary>
        internal static string GpCustomerNameLengthTaskDescription {
            get {
                return ResourceManager.GetString("GpCustomerNameLengthTaskDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} customer name(s) over 100 characters. Business Central requires Customer names to be 100 or fewer characters. Customer names greater than 100 characters will be truncated when migrated. This may cause duplicate Customers in Business Central and other integrating services depending on Customer names may no longer work..
        /// </summary>
        internal static string GpCustomerNameLengthTaskSummary {
            get {
                return ResourceManager.GetString("GpCustomerNameLengthTaskSummary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Customer number with leading spaces in the Id.
        /// </summary>
        internal static string GpCustomerNumberSpacePrefixTaskDescription {
            get {
                return ResourceManager.GetString("GpCustomerNumberSpacePrefixTaskDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} customer(s) contains leading spaces in the Id. Business Central will strip the spaces during the migration, which could result in duplicates. This causes the migration to skip migrating the duplicate customers..
        /// </summary>
        internal static string GpCustomerNumberSpacePrefixTaskSummary {
            get {
                return ResourceManager.GetString("GpCustomerNumberSpacePrefixTaskSummary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Active customer phone numbers with alpha characters.
        /// </summary>
        internal static string GpCustomerPhoneNumberAlphaTaskDescription {
            get {
                return ResourceManager.GetString("GpCustomerPhoneNumberAlphaTaskDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} active customer(s) with phone numbers that contain alpha characters. Business Central does not allow alpha characters in phone numbers. The Customers will still be migrated, but the phone numbers will be skipped..
        /// </summary>
        internal static string GpCustomerPhoneNumberAlphaTaskSummary {
            get {
                return ResourceManager.GetString("GpCustomerPhoneNumberAlphaTaskSummary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Transactions posted directly to Retained Earnings.
        /// </summary>
        internal static string GpDirectTransactionsPostingToRetainedEarningsAccountTaskDescription {
            get {
                return ResourceManager.GetString("GpDirectTransactionsPostingToRetainedEarningsAccountTaskDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} transaction(s) posted directly to the Retained Earnings account. Transactions directly posted to the Retained Earnings account can require additional effort when reconciling the GP and BC systems..
        /// </summary>
        internal static string GpDirectTransactionsPostingToRetainedEarningsAccountTaskSummary {
            get {
                return ResourceManager.GetString("GpDirectTransactionsPostingToRetainedEarningsAccountTaskSummary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Duplicate AP document numbers.
        /// </summary>
        internal static string GpDuplicateApTransactionDocumentNumberTaskDescription {
            get {
                return ResourceManager.GetString("GpDuplicateApTransactionDocumentNumberTaskDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} dupicate AP transaction document number(s) found. Business Central requires that Document Numbers are unique per Vendor. If duplicate document numbers are detected during a migration the transactions will not post. Document numbers will need to be made unique..
        /// </summary>
        internal static string GpDuplicateApTransactionDocumentNumberTaskSummary {
            get {
                return ResourceManager.GetString("GpDuplicateApTransactionDocumentNumberTaskSummary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Customer address IDs duplicated when truncated.
        /// </summary>
        internal static string GpDuplicateCustomerAddressIdsTaskDescription {
            get {
                return ResourceManager.GetString("GpDuplicateCustomerAddressIdsTaskDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} customer address(es) will not be migrated because of duplicate IDs caused by truncation. Address IDs greater than 10 characters will be truncated when migrated. Truncated Address IDs could cause duplicates and therefore not migrated..
        /// </summary>
        internal static string GpDuplicateCustomerAddressIdsTaskSummary {
            get {
                return ResourceManager.GetString("GpDuplicateCustomerAddressIdsTaskSummary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Years with duplicate records across Summary Open and History.
        /// </summary>
        internal static string GpDuplicateGlSummaryTaskDescription {
            get {
                return ResourceManager.GetString("GpDuplicateGlSummaryTaskDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} year(s) identified as duplicated in Summary Open and Summary History tables. Duplicate records across Summary Open and History Years will cause unbalanced transactions and will not be posted in Business Central when migrated..
        /// </summary>
        internal static string GpDuplicateGlSummaryTaskSummary {
            get {
                return ResourceManager.GetString("GpDuplicateGlSummaryTaskSummary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Active item IDs duplicated when truncated.
        /// </summary>
        internal static string GpDuplicateItemIdsTaskDescription {
            get {
                return ResourceManager.GetString("GpDuplicateItemIdsTaskDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} active item(s) will not be migrated due to duplicate IDs caused by truncation. Item IDs greater than 20 characters will be truncated when migrated. Truncated Item IDs could cause duplicates and therefore not migrated..
        /// </summary>
        internal static string GpDuplicateItemIdsTaskSummary {
            get {
                return ResourceManager.GetString("GpDuplicateItemIdsTaskSummary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Vendor address IDs duplicated when truncated.
        /// </summary>
        internal static string GpDuplicateVendorAddressIdsTaskDescription {
            get {
                return ResourceManager.GetString("GpDuplicateVendorAddressIdsTaskDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} vendor address(es) will not be migrated because of duplicate IDs caused by truncation. Address IDs greater than 10 haracters will be truncated when migrated. Truncated address IDs could cause duplicates and therefore not migrated..
        /// </summary>
        internal static string GpDuplicateVendorAddressIdsTaskSummary {
            get {
                return ResourceManager.GetString("GpDuplicateVendorAddressIdsTaskSummary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to GL Summary values beyond 2 decimal places.
        /// </summary>
        internal static string GpGlSummaryValuesBeyondTwoDecimalsTaskDescription {
            get {
                return ResourceManager.GetString("GpGlSummaryValuesBeyondTwoDecimalsTaskDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} GL summary record(s) identified as having values beyond two decimals. GL Summary values beyond two decimal places may cause unbalanced transactions due to rounding rules in Business Central..
        /// </summary>
        internal static string GpGlSummaryValuesBeyondTwoDecimalsTaskSummary {
            get {
                return ResourceManager.GetString("GpGlSummaryValuesBeyondTwoDecimalsTaskSummary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Accounts with incorrect main segment.
        /// </summary>
        internal static string GpIncorrectMainSegmentTaskDescription {
            get {
                return ResourceManager.GetString("GpIncorrectMainSegmentTaskDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} account(s) identified as not having the correct main segment. Run Checklinks on the Financial Account Master to correct the issue in GP before migrating..
        /// </summary>
        internal static string GpIncorrectMainSegmentTaskSummary {
            get {
                return ResourceManager.GetString("GpIncorrectMainSegmentTaskSummary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid payment terms.
        /// </summary>
        internal static string GpInvalidPaymentTermsTaskDescription {
            get {
                return ResourceManager.GetString("GpInvalidPaymentTermsTaskDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} invalid payment term(s) found. Migrating invalid payment terms will cause the migration to fail..
        /// </summary>
        internal static string GpInvalidPaymentTermsTaskSummary {
            get {
                return ResourceManager.GetString("GpInvalidPaymentTermsTaskSummary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid records in period setup (SY40100).
        /// </summary>
        internal static string GpInvalidPeriodTaskDescription {
            get {
                return ResourceManager.GetString("GpInvalidPeriodTaskDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} invalid period setup record(s). Remove the invalid period setup records..
        /// </summary>
        internal static string GpInvalidPeriodTaskSummary {
            get {
                return ResourceManager.GetString("GpInvalidPeriodTaskSummary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Item classes used and are missing its master record.
        /// </summary>
        internal static string GpItemMissingMasterRecordTaskDescription {
            get {
                return ResourceManager.GetString("GpItemMissingMasterRecordTaskDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} used item class(es) found missing master record. The default GP posting group will be used during the migration if the item class does not have a master record..
        /// </summary>
        internal static string GpItemMissingMasterRecordTaskSummary {
            get {
                return ResourceManager.GetString("GpItemMissingMasterRecordTaskSummary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Active items with no Unit of Measure Schedules.
        /// </summary>
        internal static string GpItemNoUomScheduleTaskDescription {
            get {
                return ResourceManager.GetString("GpItemNoUomScheduleTaskDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} active item(s) missing a Unit of Measure Schedule. To post migrated quantities in Business Central, it is necessary for Items to be assigned a unit of measure..
        /// </summary>
        internal static string GpItemNoUomScheduleTaskSummary {
            get {
                return ResourceManager.GetString("GpItemNoUomScheduleTaskSummary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Active item number length.
        /// </summary>
        internal static string GpItemNumberLengthTaskDescription {
            get {
                return ResourceManager.GetString("GpItemNumberLengthTaskDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} active item number(s) with length over 20 characters. Business Central requires Item IDs to be 20 or fewer characters. Item IDs greater than 20 characters will be truncated when migrated. This may cause duplicate Item IDs in Business Central and other integrating services depending on Item IDs may no longer work..
        /// </summary>
        internal static string GpItemNumberLengthTaskSummary {
            get {
                return ResourceManager.GetString("GpItemNumberLengthTaskSummary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Item number with leading spaces in the Id.
        /// </summary>
        internal static string GpItemNumberSpacePrefixTaskDescription {
            get {
                return ResourceManager.GetString("GpItemNumberSpacePrefixTaskDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} item(s) contains leading spaces in the Id. Business Central will strip the spaces during the migration, which could result in duplicates. This causes the migration to skip migrating the duplicate items..
        /// </summary>
        internal static string GpItemNumberSpacePrefixTaskSummary {
            get {
                return ResourceManager.GetString("GpItemNumberSpacePrefixTaskSummary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Main segment not configured.
        /// </summary>
        internal static string GpMainSegmentNotIdentifiedTaskDescription {
            get {
                return ResourceManager.GetString("GpMainSegmentNotIdentifiedTaskDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The main segment has not been identified in GP. A main segment must be indicated for accounts to migrate to Business Central..
        /// </summary>
        internal static string GpMainSegmentNotIdentifiedTaskSummary {
            get {
                return ResourceManager.GetString("GpMainSegmentNotIdentifiedTaskSummary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open purchase orders with inactive/discontinued items.
        /// </summary>
        internal static string GpOpenPosInactiveItemsTaskDescription {
            get {
                return ResourceManager.GetString("GpOpenPosInactiveItemsTaskDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} open purchase order(s) containing inactive or discontinued items, and those line items will not be migrated. Business Central will mark the migrated items as Blocked, which prevents the purchase order from posting transactions..
        /// </summary>
        internal static string GpOpenPosInactiveItemsTaskSummary {
            get {
                return ResourceManager.GetString("GpOpenPosInactiveItemsTaskSummary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Posting accounts not set up.
        /// </summary>
        internal static string GpPostingAccountsNotSetupTaskDescription {
            get {
                return ResourceManager.GetString("GpPostingAccountsNotSetupTaskDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} posting account(s) not set up. Migrated transactions will not post if posting accounts are missing..
        /// </summary>
        internal static string GpPostingAccountsNotSetupTaskSummary {
            get {
                return ResourceManager.GetString("GpPostingAccountsNotSetupTaskSummary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Purchase receipts without valuation method.
        /// </summary>
        internal static string GpPurchaseReceiptsWithoutValuationMethodTaskDescription {
            get {
                return ResourceManager.GetString("GpPurchaseReceiptsWithoutValuationMethodTaskDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} record(s) detected in the Inventory Purchase Recepts Work table with no valuation method. If there are entries in the IV10200 without a specified valuation method, it could imply that the Historical Inventory Trial Balance Reset Tool hasn&apos;t been executed. This could potentially lead to reconciliation problems when transitioning between systems post-migration. To learn more about the HITB Reset Tool and to download see the following article: https://learn.microsoft.com/en-us/dynamics/s-e/gp/mdgp10_hitb.
        /// </summary>
        internal static string GpPurchaseReceiptsWithoutValuationMethodTaskSummary {
            get {
                return ResourceManager.GetString("GpPurchaseReceiptsWithoutValuationMethodTaskSummary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unsupported system version.
        /// </summary>
        internal static string GpSystemVersionTaskDescription {
            get {
                return ResourceManager.GetString("GpSystemVersionTaskDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to GP system version {0} was found. The Business Central Migration Tool requires GP 14 or later..
        /// </summary>
        internal static string GpSystemVersionTaskIncompatible {
            get {
                return ResourceManager.GetString("GpSystemVersionTaskIncompatible", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not determine the value or format of the GP system version. It will need to be manually evaluated. The Business Central Migration Tool requires GP 14 or later..
        /// </summary>
        internal static string GpSystemVersionTaskUndetermined {
            get {
                return ResourceManager.GetString("GpSystemVersionTaskUndetermined", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Number of account segments.
        /// </summary>
        internal static string GpTooManyAccountSegmentsTaskDescription {
            get {
                return ResourceManager.GetString("GpTooManyAccountSegmentsTaskDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} account segment(s). Business Central allows for a maximum of 9 segments..
        /// </summary>
        internal static string GpTooManyAccountSegmentsTaskSummary {
            get {
                return ResourceManager.GetString("GpTooManyAccountSegmentsTaskSummary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unbalanced transactions ({0}).
        /// </summary>
        internal static string GpUnbalancedJournalEntriesTaskDescription {
            get {
                return ResourceManager.GetString("GpUnbalancedJournalEntriesTaskDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} unbalanced transaction(s). The Business Central Migration Tool will not automatically migrate unbalanced work transactions. Review and update the records as necessary..
        /// </summary>
        internal static string GpUnbalancedJournalEntriesTaskSummary {
            get {
                return ResourceManager.GetString("GpUnbalancedJournalEntriesTaskSummary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unbalanced summary balances ({0}).
        /// </summary>
        internal static string GpUnbalancedSummaryBalanceTaskDescription {
            get {
                return ResourceManager.GetString("GpUnbalancedSummaryBalanceTaskDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} unbalanced summary balance(s) will not migrate. The Business Central Migration Tool will attempt to migrate summary balances. If transactions are not balanced you will receive posting errors, and batches will not be posted. Correct associated Journal Entries..
        /// </summary>
        internal static string GpUnbalancedSummaryBalanceTaskSummary {
            get {
                return ResourceManager.GetString("GpUnbalancedSummaryBalanceTaskSummary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ddress IDs greater than 10 characters.
        /// </summary>
        internal static string GpVendorAddressIdLengthTaskDescription {
            get {
                return ResourceManager.GetString("GpVendorAddressIdLengthTaskDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} address(es) of active vendors have IDs greater than 10 characters. Business Central requires address IDs to be 10 or fewer characters. Address IDs greater than 10 characters will be truncated when migrated..
        /// </summary>
        internal static string GpVendorAddressIdLengthTaskSummary {
            get {
                return ResourceManager.GetString("GpVendorAddressIdLengthTaskSummary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Active vendor email addresses invalidly formatted.
        /// </summary>
        internal static string GpVendorInvalidEmailTaskDescription {
            get {
                return ResourceManager.GetString("GpVendorInvalidEmailTaskDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} vendor email address(es) invalidly formatted. Business Central requires email addresses be in a specific format, and emails outside this format will not be migrated..
        /// </summary>
        internal static string GpVendorInvalidEmailTaskSummary {
            get {
                return ResourceManager.GetString("GpVendorInvalidEmailTaskSummary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Vendor name length.
        /// </summary>
        internal static string GpVendorNameLengthTaskDescription {
            get {
                return ResourceManager.GetString("GpVendorNameLengthTaskDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} vendor name(s) over 100 characters. Business Central requires Vendor names to be 100 or fewer characters. Vendor names greater than 100 characters will be truncated when migrated. This may cause duplicate Vendors in Business Central and other integrating services depending on Vendor names may no longer work..
        /// </summary>
        internal static string GpVendorNameLengthTaskSummary {
            get {
                return ResourceManager.GetString("GpVendorNameLengthTaskSummary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Vendor number with leading spaces in the Id.
        /// </summary>
        internal static string GpVendorNumberSpacePrefixTaskDescription {
            get {
                return ResourceManager.GetString("GpVendorNumberSpacePrefixTaskDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} vendor(s) contains leading spaces in the Id. Business Central will strip the spaces during the migration, which could result in duplicates. This causes the migration to skip migrating the duplicate vendor..
        /// </summary>
        internal static string GpVendorNumberSpacePrefixTaskSummary {
            get {
                return ResourceManager.GetString("GpVendorNumberSpacePrefixTaskSummary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Active vendor phone numbers with alpha characters.
        /// </summary>
        internal static string GpVendorPhoneNumberAlphaTaskDescription {
            get {
                return ResourceManager.GetString("GpVendorPhoneNumberAlphaTaskDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} active vendor(s) detected with phone numbers that contain alpha characters. Business Central does not allow alpha characters in phone numbers. The vendors will still be migrated, but the phone numbers will be skipped..
        /// </summary>
        internal static string GpVendorPhoneNumberAlphaTaskSummary {
            get {
                return ResourceManager.GetString("GpVendorPhoneNumberAlphaTaskSummary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Accounts with different posting types.
        /// </summary>
        internal static string GpVerifyPostingTypesTaskDescription {
            get {
                return ResourceManager.GetString("GpVerifyPostingTypesTaskDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} account(s) identified as having the same main segment but different posting types. If multiple accounts have been identified as having the same main segment but different posting types this may cause issues when reconciling year end information across systems..
        /// </summary>
        internal static string GpVerifyPostingTypesTaskSummary {
            get {
                return ResourceManager.GetString("GpVerifyPostingTypesTaskSummary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap greydash {
            get {
                object obj = ResourceManager.GetObject("greydash", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Change tracking status.
        /// </summary>
        internal static string SqlChangeTrackingDisabledTaskDescription {
            get {
                return ResourceManager.GetString("SqlChangeTrackingDisabledTaskDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Change tracking is not enabled. The Business Central Migration Tool requires databases to have change tracking enabled..
        /// </summary>
        internal static string SqlChangeTrackingDisabledTaskNotEnabled {
            get {
                return ResourceManager.GetString("SqlChangeTrackingDisabledTaskNotEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The following SQL query can be used to enable change tracking:
        ///
        ///ALTER DATABASE [{0}]
        ///SET
        ///    CHANGE_TRACKING = ON (
        ///        CHANGE_RETENTION = 2 DAYS, AUTO_CLEANUP = ON
        ///    ).
        /// </summary>
        internal static string SqlChangeTrackingDisabledTaskNotEnabledDetail {
            get {
                return ResourceManager.GetString("SqlChangeTrackingDisabledTaskNotEnabledDetail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Database compatibility level.
        /// </summary>
        internal static string SqlCompatibilityLevelTaskDescription {
            get {
                return ResourceManager.GetString("SqlCompatibilityLevelTaskDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to See the following article on instructions for changing the compatibility level: https://learn.microsoft.com/en-us/sql/relational-databases/databases/view-or-change-the-compatibility-level-of-a-database?view=sql-server-ver16.
        /// </summary>
        internal static string SqlCompatibilityLevelTaskDetail {
            get {
                return ResourceManager.GetString("SqlCompatibilityLevelTaskDetail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The database has as compatibility level of {0}. The database must have a compatibility level of 130 or higher..
        /// </summary>
        internal static string SqlCompatibilityLevelTaskSummary {
            get {
                return ResourceManager.GetString("SqlCompatibilityLevelTaskSummary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not determine the database compatibility level. The database must have a compatibility level of 130 or higher. It will need to be manually evaluated..
        /// </summary>
        internal static string SqlCompatibilityLevelTaskUndetermined {
            get {
                return ResourceManager.GetString("SqlCompatibilityLevelTaskUndetermined", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SQL server product version.
        /// </summary>
        internal static string SqlIncompatibleVersionTaskDescription {
            get {
                return ResourceManager.GetString("SqlIncompatibleVersionTaskDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An incompatible SQL server version was found. Migration requires SQL Server 2016 SP1 or later..
        /// </summary>
        internal static string SqlIncompatibleVersionTaskIncompatible {
            get {
                return ResourceManager.GetString("SqlIncompatibleVersionTaskIncompatible", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not determine the value or format of the SQL version. It will need to be manually evaluated..
        /// </summary>
        internal static string SqlIncompatibleVersionTaskUndetermined {
            get {
                return ResourceManager.GetString("SqlIncompatibleVersionTaskUndetermined", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap X_grey_64x {
            get {
                object obj = ResourceManager.GetObject("X_grey_64x", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap X_red_64x {
            get {
                object obj = ResourceManager.GetObject("X_red_64x", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
    }
}
